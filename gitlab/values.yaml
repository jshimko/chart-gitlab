# Domains
gitlabDomain: git.example.com
registryDomain: registry.example.com

# baseIP is an externally provisioned static IP address to use with the LoadBalancer instead of the provisioned one.
# baseIP: 1.2.3.4

# Valid values for provider are `aws` or `gke`
provider: aws

nameOverride: gitlab

gitlab:
  # https://hub.docker.com/r/gitlab/gitlab-ee/tags/
  image: gitlab/gitlab-ee:10.4.0-ee.0

  ## Should the service be LoadBalancer, NodePort or ClusterIP
  ## If you're using ingress, ClusterIP should be a solid choice
  serviceType: ClusterIP

  ## Resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    requests:
      memory: 2Gi
      cpu: 1
    limits:
      memory: 4Gi
      cpu: 2

  # Node affinity and taint tolerations for pods
  scheduling:
    affinity:
      node:
        type: requiredDuringSchedulingIgnoredDuringExecution
        labels:
        # - key: reactioncommerce.com/app
        #   operator: In
        #   values: ["launchdock.io"]
    tolerations:
    # - key: launchdock.io/dedicated
    #   value: launchdock-core
    #   effect: NoSchedule

# ensure all PVC's used by the Gitlab container are in the same zone
gitlabPVCAvailabilityZone: us-west-2b

gitlabDataAccessMode: ReadWriteOnce
# gitlabDataStorageSize: 30Gi
gitlabRegistryAccessMode: ReadWriteOnce
# gitlabRegistryStorageSize: 30Gi
gitlabConfigAccessMode: ReadWriteOnce
# gitlabConfigStorageSize: 1Gi

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: "gitlab"

email:
  enabled: false
#   address: smtp.mailgun.org
#   port:
#   authentication: plain
#   username:
#   password:
#   domain:
#   enableStartTLSAuto: true
#   from:
#   replyTo:

initialSharedRunnersRegistrationToken: "<changeme>"

redisImage: redis:3.2.11-alpine
redisDedicatedStorage: true
# redisStorageSize: 5Gi
redisAccessMode: ReadWriteOnce

redis:

  ## Resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    requests:
      memory: 512Mi
      cpu: 500m
    limits:
      memory: 512Mi
      cpu: 1

  # Configure Node affinity and taint tolerations for pods
  scheduling:
    affinity:
      node:
        type: requiredDuringSchedulingIgnoredDuringExecution
        labels:
        # - key: reactioncommerce.com/app
        #   operator: In
        #   values: ["launchdock.io"]
    tolerations:
    # - key: launchdock.io/dedicated
    #   value: launchdock-core
    #   effect: NoSchedule


postgres:

  ## Resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    requests:
      memory: 2Gi
      cpu: 500m
    limits:
      memory: 1Gi
      cpu: 2

  # Configure Node affinity and taint tolerations for pods
  scheduling:
    affinity:
      node:
        type: requiredDuringSchedulingIgnoredDuringExecution
        labels:
        # - key: reactioncommerce.com/app
        #   operator: In
        #   values: ["launchdock.io"]
    tolerations:
    # - key: launchdock.io/dedicated
    #   value: launchdock-core
    #   effect: NoSchedule

postgresImage: postgres:9.6.6-alpine
postgresPassword: "<changeme>"
postgresDedicatedStorage: true
postgresAccessMode: ReadWriteOnce
# postgresStorageSize: 30Gi

# Gitlab pages
# The following 3 lines are needed to enable gitlab pages.
# pagesExternalScheme: http
# pagesExternalDomain: your-pages-domain.com
# pagesTlsSecret: gitlab-pages-tls # An optional reference to a tls secret to use in pages

## Storage Class Options
gitlabConfigStorageClass: gitlab-storage
gitlabDataStorageClass: gitlab-storage
gitlabRegistryStorageClass: gitlab-storage
# postgresStorageClass: default
# redisStorageClass: default

healthCheckToken: "<changeme>"

# Optional, for GitLab EE images only
# gitlabEELicense: base64-encoded-license

registry:
  storage:
    internal: true
    class: gitlab-storage  # only used for local PVC when `internal: true`

    ## External storage driver.
    ## Set "internal" to false above
    # driver: s3
    # s3:
    #   accessKey:
    #   secretKey:
    #   bucket:
    #   region:

# Backup to remote cloud storage
# https://gitlab.com/gitlab-org/gitlab-ee/blob/master/doc/raketasks/backup_restore.md#uploading-backups-to-a-remote-cloud-storage
backups:
  storage:
    enabled: false
    provider: AWS
    region: us-west-2
    # accessKeyId:
    # accessKeySecret:
